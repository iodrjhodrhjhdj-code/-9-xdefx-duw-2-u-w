local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local initialSize = Vector2.new(0, 0)
local replayButton
local connection
local isReplaying = false -- Flag to check if replay is in progress
local sizeHandled = false -- Flag to check if the size change has been handled



-- Load JSON data (replace 'your_json_string_here' with your actual JSON data)
local jsonData = [[
[{"Time":0.7274562109996623,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.GAME_START.readyButton"},{"Time":5.87394845900053,"Arguments":[{"value":"Players.MATIDPL","__type":"Instance"}],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.dance"},{"Time":5.874524670000028,"Arguments":[{"value":"Players.MATIDPL","__type":"Instance"}],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.dance"},{"Time":9.632794904000548,"Arguments":[],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.mainLoad"},{"Time":9.773327434999374,"Arguments":[],"MethodName":"InvokeServer","RemotePath":"ReplicatedStorage.getPath"},{"Time":9.79876939099995,"Arguments":[],"MethodName":"InvokeServer","RemotePath":"ReplicatedStorage.Event.getTowers"},{"Time":10.405869083999278,"Arguments":[],"MethodName":"InvokeServer","RemotePath":"ReplicatedStorage.getUnitPath"},{"Time":16.60365675399953,"Arguments":["TitanSilver",{"value":[-346.46014404296877,-195.32879638671876,183.00576782226563,1,0,0,0,1,0,0,0,1],"__type":"CFrame"},false],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.placeTower"},{"Time":17.532491080999536,"Arguments":[2],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Game.Speed.Change"},{"Time":17.654422740999509,"Arguments":[3],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Game.Speed.Change"},{"Time":17.786447999998928,"Arguments":[4],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Game.Speed.Change"},{"Time":22.83050441299929,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":24.849455997000406,"Arguments":["test",{"value":[-323.6394348144531,-195.32876586914063,171.58387756347657,1,0,0,0,1,0,0,0,1],"__type":"CFrame"},false],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.placeTower"},{"Time":27.002071732998958,"Arguments":["test",{"value":[-325.2690734863281,-195.32876586914063,173.90496826171876,1,0,0,0,1,0,0,0,1],"__type":"CFrame"},false],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.placeTower"},{"Time":29.428055656999278,"Arguments":["test",{"value":[-326.9235534667969,-195.32876586914063,176.07960510253907,1,0,0,0,1,0,0,0,1],"__type":"CFrame"},false],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.placeTower"},{"Time":32.282122544998859,"Arguments":["test",{"value":[-324.9078674316406,-195.32876586914063,176.181640625,1,0,0,0,1,0,0,0,1],"__type":"CFrame"},false],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.placeTower"},{"Time":32.73161127499952,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":37.37190524499965,"Arguments":["Speakerwoman",{"value":[-329.11822509765627,-195.32876586914063,176.4208526611328,1,0,0,0,1,0,0,0,1],"__type":"CFrame"},false],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.placeTower"},{"Time":38.4395932009993,"Arguments":["6"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":39.057578501000538,"Arguments":["6"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":39.58350732799954,"Arguments":["6"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":50.25423799300006,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":51.30394266199983,"Arguments":["6"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":53.84218468600011,"Arguments":["3"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":57.64656082399961,"Arguments":["3"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":60.378676435999299,"Arguments":["4"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":64.90316959200027,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":66.77812917600022,"Arguments":["5"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":69.14039200299885,"Arguments":["5"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":72.30659755099987,"Arguments":["4"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":74.83978151699921,"Arguments":["2"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":81.80175687299925,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":82.9308912460001,"Arguments":["2"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":90.16972363499917,"Arguments":["1"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":100.63177697799984,"Arguments":["DJ",{"value":[-313.3114318847656,-195.32876586914063,176.7821502685547,1,0,0,0,1,0,0,0,1],"__type":"CFrame"},false],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.placeTower"},{"Time":103.02144798199879,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":103.28807050599971,"Arguments":["7"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":104.7216437499992,"Arguments":["7"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":109.08788993999952,"Arguments":["1"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":114.57684197799972,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":115.6616263979995,"Arguments":["4"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":118.49478392799938,"Arguments":["3"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":134.23066293699959,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":137.48446138200053,"Arguments":["5"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":139.7793652269993,"Arguments":["2"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":142.81728658099929,"Arguments":["7"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":145.7118786079991,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":152.68609837999976,"Arguments":["4"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":155.27038280499984,"Arguments":["5"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":159.02398656200058,"Arguments":["LargeClock",{"value":[-326.2148742675781,-195.3287811279297,179.5507049560547,1,0,0,0,1,0,0,0,1],"__type":"CFrame"},false],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.placeTower"},{"Time":160.3734883449997,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":161.9202636459995,"Arguments":["8"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":163.01353523499894,"Arguments":["8"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":163.76226941499955,"Arguments":["8"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":164.7253081910003,"Arguments":["8"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":168.06506796199938,"Arguments":["3"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":168.66492728499908,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":170.36604429999898,"Arguments":["2"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":173.1449781449992,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":180.47768663999887,"Arguments":["5"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":181.10420969900043,"Arguments":["5"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":181.82479211600004,"Arguments":["5"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":183.78841431100046,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":184.584811626999,"Arguments":["5"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":185.46201269999984,"Arguments":["5"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":188.53119393499947,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":189.26168393199988,"Arguments":["1"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":190.24584890000006,"Arguments":["1"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":191.3293967339996,"Arguments":["1"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":192.69068825899923,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":195.6457075269991,"Arguments":["2"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":200.95780520799964,"Arguments":["4"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":202.3447641769999,"Arguments":["4"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":203.52391596000053,"Arguments":["4"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":204.88848550699914,"Arguments":["4"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":206.19340386699879,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":208.42513222199887,"Arguments":["4"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":210.63500384799955,"Arguments":["3"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":211.70906426699913,"Arguments":["3"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":212.82810645800056,"Arguments":["3"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":213.9601796579991,"Arguments":["3"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":215.32325717399909,"Arguments":["3"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":217.93151368100008,"Arguments":["2"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":219.1870300970004,"Arguments":["2"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":220.5089384469993,"Arguments":["2"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":221.6905681520002,"Arguments":["2"],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.UpgradeTower"},{"Time":223.0771558029992,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":232.78373426500003,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"},{"Time":248.03818154200054,"Arguments":[true],"MethodName":"FireServer","RemotePath":"ReplicatedStorage.Event.waveSkip"}]
]]

-- Deserialize JSON data
local success, events = pcall(function()
	return HttpService:JSONDecode(jsonData)
end)

if not success then
	warn("Failed to decode JSON data.")
	return
end

local function DeserializeArguments(arguments)
	local deserializedArgs = {}
	for _, arg in ipairs(arguments) do
		if type(arg) == "table" and arg.__type then
			if arg.__type == "Instance" then
				table.insert(deserializedArgs, game:GetService("Workspace"):FindFirstChild(arg.value) or game)
			elseif arg.__type == "Vector3" then
				table.insert(deserializedArgs, Vector3.new(unpack(arg.value)))
			elseif arg.__type == "CFrame" then
				table.insert(deserializedArgs, CFrame.new(unpack(arg.value)))
			elseif arg.__type == "Color3" then
				table.insert(deserializedArgs, Color3.new(unpack(arg.value)))
			elseif arg.__type == "EnumItem" then
				table.insert(deserializedArgs, Enum[arg.value])
			else
				table.insert(deserializedArgs, arg)
			end
		else
			table.insert(deserializedArgs, arg)
		end
	end
	return deserializedArgs
end

local function FindRemote(remotePath)
	local remote = game
	for part in string.gmatch(remotePath, "[^%.]+") do
		remote = remote:FindFirstChild(part)
		if not remote then
			return nil
		end
	end
	return remote
end

local function SafeInvokeServer(remote, args)
	local success, result = pcall(function()
		return remote:InvokeServer(unpack(args))
	end)
	if not success then
		warn("Failed to invoke server:", result)
	end
	return result
end

local function SafeFireServer(remote, args)
	local success, result = pcall(function()
		remote:FireServer(unpack(args))
	end)
	if not success then
		warn("Failed to fire server:", result)
	end
end

local function ReplayRemoteEvents(events)
	for i, event in ipairs(events) do
		local remote = FindRemote(event.RemotePath)
		if remote then
			local methodName = event.MethodName
			local args = DeserializeArguments(event.Arguments)

			print(string.format("Attempting to fire remote: %s, Method: %s, Args: %s", remote:GetFullName(), methodName, HttpService:JSONEncode(args)))

			if methodName == "FireServer" then
				SafeFireServer(remote, args)
			elseif methodName == "InvokeServer" then
				local result = SafeInvokeServer(remote, args)
				if not result then
					warn("Invocation failed for remote: ", remote:GetFullName())
				else
					print("Invocation result: ", result)
				end
			end

			-- Wait for the original delay between events
			if i < #events then
				local delay = events[i + 1].Time - event.Time
				local startTime = tick()
				while tick() - startTime < delay do
					wait(0.1)
				end
			end
		else
			warn("Remote not found:", event.RemotePath)
		end
	end
end

local function StartReplay()
	if isReplaying then
		print("Replay already in progress, exiting StartReplay.")
		return -- Exit if replay is already in progress
	end
	isReplaying = true -- Set the replay flag
	print("Starting replay...")

	-- Fire ReplayCore remote
	ReplicatedStorage:WaitForChild("Event"):WaitForChild("ReplayCore"):FireServer()

	-- Wait 2 seconds before firing readyButton remote
	wait(2)

	-- Check if GAME_START and readyButton exist
	local gameStart = ReplicatedStorage:FindFirstChild("GAME_START")
	if gameStart then
		local readyButton = gameStart:FindFirstChild("readyButton")
		if readyButton then
			-- Fire readyButton remote
			local args = {[1] = true}
			readyButton:FireServer(unpack(args))
		else
			warn("readyButton not found in GAME_START")
		end
	else
		warn("GAME_START not found in ReplicatedStorage")
	end

	task.spawn(function()
		ReplayRemoteEvents(events)
		isReplaying = false -- Reset the flag after replay is done
		print("Replay finished.")

		-- Restart monitoring the replay button
		sizeHandled = false -- Reset the sizeHandled flag
		MonitorReplayButton()
	end)
end

local function MonitorReplayButton()
	replayButton = Player:WaitForChild("PlayerGui"):WaitForChild("GameEnded"):WaitForChild("Frame"):WaitForChild("replay")

	if connection then
		connection:Disconnect()
		connection = nil
	end

	connection = replayButton:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
		if not sizeHandled and (replayButton.AbsoluteSize.X > initialSize.X or replayButton.AbsoluteSize.Y > initialSize.Y) then
			print("Replay button AbsoluteSize increased. Waiting 10 seconds before starting replay.")
			sizeHandled = true -- Mark size change as handled
			local startTime = tick()
			while tick() - startTime < 10 do
				wait(0.1)
			end
			if not isReplaying then
				StartReplay()
			end
		end
	end)
	print("Monitoring replay button for size changes.")
end

-- Initial replay start using a task scheduler to ensure it starts properly
task.defer(function()
	print("Initial replay start.")
	StartReplay()
end)

-- Start monitoring the replay button
MonitorReplayButton()

print("Replay script initialized and running.")
